import React, { useState } from 'react';
import { PDFViewer } from '../components/ui2/pdf-viewer';
import { PDFRenderer, PDFText, PDFTable } from '../components/ui2/pdf-renderer';
import { Card, CardHeader, CardContent } from '../components/ui2/card';
import { Tabs } from '../components/ui2/tabs';
import { Button } from '../components/ui2/button';
import { FileText, Eye, Download } from 'lucide-react';

function PDFViewerPage() {
  const [activeTab, setActiveTab] = useState('view');
  const [downloadUrl, setDownloadUrl] = useState<string | null>(null);

  // Example PDF content
  const pdfContent = {
    sections: [
      {
        title: 'Section 1',
        content: (
          <>
            <PDFText>
              This is a sample PDF document generated using @react-pdf/renderer.
              It demonstrates various features like text formatting, tables, and styling.
            </PDFText>
            <PDFTable 
              headers={['Header 1', 'Header 2', 'Header 3']}
              data={[
                ['Row 1, Col 1', 'Row 1, Col 2', 'Row 1, Col 3'],
                ['Row 2, Col 1', 'Row 2, Col 2', 'Row 2, Col 3'],
                ['Row 3, Col 1', 'Row 3, Col 2', 'Row 3, Col 3'],
              ]}
              widths={[1, 2, 1]} // Column width ratios
            />
          </>
        ),
      },
      {
        title: 'Section 2',
        content: (
          <PDFText>
            This section demonstrates more content and formatting options.
            You can customize the styles, add more sections, and include various components.
          </PDFText>
        ),
      },
    ],
  };

  const handleDownload = () => {
    // In a real application, you would generate the PDF URL here
    const pdfUrl = 'https://example.com/sample.pdf';
    setDownloadUrl(pdfUrl);
    
    // Trigger download
    const link = document.createElement('a');
    link.href = pdfUrl;
    link.download = 'document.pdf';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const tabs = [
    {
      id: 'view',
      label: 'View PDF',
      icon: <Eye className="h-5 w-5" />,
    },
    {
      id: 'preview',
      label: 'Preview',
      icon: <FileText className="h-5 w-5" />,
    },
  ];

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-semibold text-foreground">PDF Viewer</h1>
        <Button
          onClick={handleDownload}
          className="flex items-center"
        >
          <Download className="h-4 w-4 mr-2" />
          Download PDF
        </Button>
      </div>

      <Card className="overflow-hidden">
        <CardHeader className="border-b border-border">
          <Tabs
            tabs={tabs}
            activeTab={activeTab}
            onChange={setActiveTab}
            variant="enclosed"
            size="sm"
          />
        </CardHeader>
        <CardContent className="p-0">
          {activeTab === 'view' ? (
            <PDFViewer
              url="/sample.pdf"
              title="Sample Document"
              onDownload={handleDownload}
              className="min-h-[800px]"
            />
          ) : (
            <PDFRenderer
              title="Sample Document"
              content={pdfContent}
              footer="Generated by Steward Track"
              className="min-h-[800px]"
            />
          )}
        </CardContent>
      </Card>
    </div>
  );
}

export default PDFViewerPage;